<?php

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $family_id
 * @property integer $unit_measure_id
 * @property string $codigo
 * @property string $name
 * @property boolean $active
 * @property UnitMeasure $UnitMeasure
 * @property ProductFamily $ProductFamily
 * @property Doctrine_Collection $ProductLineProduct
 * @property Doctrine_Collection $ProductionOrder
 * 
 * @method integer             getFamilyId()           Returns the current record's "family_id" value
 * @method integer             getUnitMeasureId()      Returns the current record's "unit_measure_id" value
 * @method string              getCodigo()             Returns the current record's "codigo" value
 * @method string              getName()               Returns the current record's "name" value
 * @method boolean             getActive()             Returns the current record's "active" value
 * @method UnitMeasure         getUnitMeasure()        Returns the current record's "UnitMeasure" value
 * @method ProductFamily       getProductFamily()      Returns the current record's "ProductFamily" value
 * @method Doctrine_Collection getProductLineProduct() Returns the current record's "ProductLineProduct" collection
 * @method Doctrine_Collection getProductionOrder()    Returns the current record's "ProductionOrder" collection
 * @method Product             setFamilyId()           Sets the current record's "family_id" value
 * @method Product             setUnitMeasureId()      Sets the current record's "unit_measure_id" value
 * @method Product             setCodigo()             Sets the current record's "codigo" value
 * @method Product             setName()               Sets the current record's "name" value
 * @method Product             setActive()             Sets the current record's "active" value
 * @method Product             setUnitMeasure()        Sets the current record's "UnitMeasure" value
 * @method Product             setProductFamily()      Sets the current record's "ProductFamily" value
 * @method Product             setProductLineProduct() Sets the current record's "ProductLineProduct" collection
 * @method Product             setProductionOrder()    Sets the current record's "ProductionOrder" collection
 * 
 * @package    eMrp
 * @subpackage model
 * @author     Scoppia
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('family_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('unit_measure_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('codigo', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UnitMeasure', array(
             'local' => 'unit_measure_id',
             'foreign' => 'id'));

        $this->hasOne('ProductFamily', array(
             'local' => 'family_id',
             'foreign' => 'id'));

        $this->hasMany('ProductLineProduct', array(
             'local' => 'id',
             'foreign' => 'production_line_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasMany('ProductionOrder', array(
             'local' => 'id',
             'foreign' => 'product_id'));
    }
}